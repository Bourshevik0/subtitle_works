[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.709
PlayResX: 1920
PlayResY: 1080

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: 1080P文泉驿微米黑标准,文泉驿微米黑,60,&H00FFFFFF,&HFF000000,&H28000000,&HFF000000,0,0,0,0,100,100,0,0,1,4,0,2,10,10,10,1
Style: 1080P思源中等注释位置,思源黑体 Medium,60,&H00FFFFFF,&HFF000000,&H28000000,&H7F000000,0,0,0,0,100,100,0,0,1,4,0,7,10,10,10,134

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Comment: 0,0:00:02.81,0:00:11.52,1080P思源中等注释位置,,0,0,0,,{\blur4}注释
Dialogue: 0,0:00:02.81,0:00:11.52,1080P思源中等注释位置,,0,0,0,,{\blur4}BGM: Limosine by audionautix\N录音技术存在偏差，如果嫌弃声音质量太差可以使用P2纯BGM版\N或者直接看博客文章吧，文字效率总是最高的
Dialogue: 0,0:00:11.77,0:00:27.88,1080P思源中等注释位置,,0,0,0,,{\blur4}{\fs40\pos(100,130)}时间索引：\N01:46 简介\N02:19 程序准备\N03:26 fork 他人仓库\N03:42 克隆到本地\N04:30 本地提交改动\N06:50 推送本地提交\N08:24 反悔推送
Dialogue: 0,0:04:02.57,0:04:08.57,1080P思源中等注释位置,,0,0,0,,{\blur4}BGM: ILikePeanuts by audionautix
Dialogue: 0,0:04:08.83,0:04:12.81,1080P思源中等注释位置,,0,0,0,,{\blur4}注：这里指的是clone with https
Dialogue: 0,0:04:15.41,0:04:18.04,1080P思源中等注释位置,,0,0,0,,{\blur4}字幕布尔：喷了，说好的零基础
Dialogue: 0,0:05:32.03,0:05:38.72,1080P思源中等注释位置,,0,0,0,,{\blur4}BGM: StandardJazzBars by audionautix
Dialogue: 0,0:07:40.54,0:07:45.54,1080P思源中等注释位置,,0,0,0,,{\blur4}注：这里指的是github ssh的配置
Dialogue: 0,0:08:33.02,0:08:39.16,1080P思源中等注释位置,,0,0,0,,{\blur4}BGM: OkeyDokeySmokey by audionautix
Dialogue: 0,0:09:12.95,0:09:25.50,1080P思源中等注释位置,,0,0,0,,{\blur4}字幕布尔：这里指的就是强制推送会把远端的仓库整个被本地端给覆盖，如果远端的仓库\N有别人没保存的改动就会影响到别人，是这个意思\N如果是你自己用的仓库当然怎么折腾都可以的
Dialogue: 0,0:09:29.59,0:09:32.41,1080P思源中等注释位置,,0,0,0,,{\blur4}字幕布尔：根本没有演示，念稿子而已，喷了
Comment: 0,0:00:02.81,0:00:06.57,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}字幕
Dialogue: 0,0:00:02.81,0:00:06.57,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}github算用了一段时间 但是我居然不清楚
Dialogue: 0,0:00:06.57,0:00:11.52,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}就说你不是仓库的拥有者 owner 或者是协作者 collaborator
Dialogue: 0,0:00:11.77,0:00:14.84,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}在这种情况下你该如何维护项目的代码
Dialogue: 0,0:00:15.10,0:00:20.48,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}最近我才知道其他人是可以通过pull request来维护某个项目的代码的
Dialogue: 0,0:00:20.99,0:00:23.25,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}不过呢我整个视频做得比较简略
Dialogue: 0,0:00:23.25,0:00:27.88,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}所以我也不好把这个视频叫做一个教程 我就叫做流程演示好了
Dialogue: 0,0:00:28.16,0:00:33.80,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}那我现在就来讲一下本次pull request流程演示的整个部分
Dialogue: 0,0:00:33.93,0:00:36.02,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}第一个部分就是简介
Dialogue: 0,0:00:36.35,0:00:38.14,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}第二个部分是准备程序
Dialogue: 0,0:00:38.40,0:00:41.72,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}要安装sourcetree和git
Dialogue: 0,0:00:41.98,0:00:44.03,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}第三部分是正文
Dialogue: 0,0:00:44.28,0:00:45.05,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}也就是整个流程
Dialogue: 0,0:00:45.82,0:00:47.61,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}流程的分为(第一步)远程克隆
Dialogue: 0,0:00:47.87,0:00:50.37,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}也可以说是fork他人的仓库
Dialogue: 0,0:00:50.43,0:00:53.76,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}(第二步)从服务器端克隆到本地就叫克隆
Dialogue: 0,0:00:54.20,0:00:57.59,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}(第三步)提交 commit 提交你刚才的改动
Dialogue: 0,0:00:57.85,0:01:00.65,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}第四步 推送你刚才的提交
Dialogue: 0,0:01:00.98,0:01:06.30,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}第五步也是一个很常见的应用场景就是如果你的第四步出问题的时候你
Dialogue: 0,0:01:06.56,0:01:09.12,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}该如何撤回第四步那个操作
Dialogue: 0,0:01:10.63,0:01:11.93,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}首先还是要声明一下
Dialogue: 0,0:01:12.18,0:01:13.98,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}本教程主要是面相
Dialogue: 0,0:01:14.31,0:01:16.80,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}会用谷歌的github零基础使用者
Dialogue: 0,0:01:17.01,0:01:18.74,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}不过这个地方我感觉好像有个悖论
Dialogue: 0,0:01:18.82,0:01:20.64,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}就是如果你都会用谷歌了
Dialogue: 0,0:01:21.96,0:01:24.57,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你为什么还要看这样的教程呢
Dialogue: 0,0:01:24.99,0:01:27.14,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}好吧那我还是要接着做嘛
Dialogue: 0,0:01:27.25,0:01:31.64,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}哪怕可能最后过来看的都是把我批判一番的大佬
Dialogue: 0,0:01:32.34,0:01:34.56,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这张图你看懂我什么意思了吧
Dialogue: 0,0:01:34.58,0:01:37.87,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你看到这行字你应该知道我想说什么意思了
Dialogue: 0,0:01:38.04,0:01:42.85,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}当然这个演示更多的还是给我自己做一个记录吧
Dialogue: 0,0:01:42.91,0:01:44.76,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}以防止以后忘记
Dialogue: 0,0:01:46.42,0:01:48.54,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}简单介绍一下 pull request是什么
Dialogue: 0,0:01:49.55,0:01:52.80,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}阮一峰的说法说是pull request是一种通知机制
Dialogue: 0,0:01:52.98,0:01:54.04,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你修改了他人的代码
Dialogue: 0,0:01:54.56,0:01:58.01,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}将你的修改通知原来的作者 希望他合并你的修改
Dialogue: 0,0:01:58.09,0:02:01.44,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}但是呢我觉得还是要更多的讲一下这个pull request从
Dialogue: 0,0:02:01.94,0:02:03.87,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个单词的意思上的解释吧
Dialogue: 0,0:02:03.90,0:02:06.29,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你拆开来就是pull和request
Dialogue: 0,0:02:06.58,0:02:09.86,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}pull指的是github中的一种操作叫做拉取
Dialogue: 0,0:02:10.06,0:02:13.88,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}指的是从远程仓库拉取(下载)到本地的这个操作
Dialogue: 0,0:02:14.10,0:02:19.34,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}而request请求指的是你要求别人拉取你的这个改动
Dialogue: 0,0:02:19.38,0:02:21.82,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}我讲解一下我是你这里的准备呢
Dialogue: 0,0:02:22.18,0:02:25.11,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}指的都是Windows 10的操作系统
Dialogue: 0,0:02:26.43,0:02:27.61,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}安装这个sourcetree
Dialogue: 0,0:02:27.61,0:02:30.52,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}安装的时候没有太多需要说明的
Dialogue: 0,0:02:30.66,0:02:33.85,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}我唯一需要指出的一点就是说 你安装的时候
Dialogue: 0,0:02:34.11,0:02:36.12,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}我建议你用内嵌版的git
Dialogue: 0,0:02:36.14,0:02:37.44,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}也就是embedded
Dialogue: 0,0:02:38.59,0:02:39.48,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}相比之下呢
Dialogue: 0,0:02:39.74,0:02:41.74,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}git 如何配置多账户
Dialogue: 0,0:02:41.74,0:02:44.24,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}就是纯粹的git的环境下如何配置多账户
Dialogue: 0,0:02:44.26,0:02:46.76,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你可以参考这个教程
Dialogue: 0,0:02:47.16,0:02:48.96,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}我就不再多讲了
Dialogue: 0,0:02:49.21,0:02:51.77,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个在博客的文章里可以找到
Dialogue: 0,0:02:52.03,0:02:52.54,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个链接
Dialogue: 0,0:02:54.08,0:02:54.84,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你要使用
Dialogue: 0,0:02:55.10,0:02:57.93,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}系统自带的git 你就要单独安装git
Dialogue: 0,0:02:58.30,0:03:02.27,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}因为内嵌版的git是sourcetree它会自动帮你装好
Dialogue: 0,0:03:02.84,0:03:04.22,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}而不需要单独安装
Dialogue: 0,0:03:04.57,0:03:08.92,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}安装git的话 windows方面的话我建议你安装一个
Dialogue: 0,0:03:09.46,0:03:11.96,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}windows的第三方包管理器chocolatey
Dialogue: 0,0:03:12.34,0:03:16.73,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}chocolatey就有点像ubuntu上面的apt
Dialogue: 0,0:03:16.94,0:03:18.65,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}安装完chocolatey之后呢
Dialogue: 0,0:03:18.91,0:03:23.62,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}用Windows+X调出命令行或者Powershell然后输以下指令
Dialogue: 0,0:03:23.62,0:03:26.59,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}choco install git来安装git
Dialogue: 0,0:03:26.59,0:03:27.87,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}接下来就终于到正文了
Dialogue: 0,0:03:28.12,0:03:29.96,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}首先是fork别人的仓库
Dialogue: 0,0:03:30.04,0:03:31.68,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}fork的时候你会看到那个
Dialogue: 0,0:03:32.02,0:03:35.76,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}打开别人的仓库主页你看到右上角有一个fork按钮你就点它就行了
Dialogue: 0,0:03:36.06,0:03:42.86,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}然后它就会直接 把别人仓库创建到那你的账号下会有一个副本
Dialogue: 0,0:03:42.86,0:03:44.29,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}第二步呢就是克隆
Dialogue: 0,0:03:44.76,0:03:46.60,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你打开sourcetree然后呢
Dialogue: 0,0:03:46.60,0:03:51.89,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}看到上面有一个菜单栏下面那个位置会看到有一个clone的按钮
Dialogue: 0,0:03:51.91,0:03:52.96,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}然后你点击clone
Dialogue: 0,0:03:53.21,0:03:57.31,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}然后clone里面你会看到那个需要你输入
Dialogue: 0,0:03:57.56,0:04:00.28,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}那个远端的那个网址
Dialogue: 0,0:04:00.56,0:04:02.52,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}和本地的文件目录
Dialogue: 0,0:04:02.57,0:04:05.76,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}远端网址当然是你刚才创建那个副本页面下面
Dialogue: 0,0:04:06.21,0:04:08.57,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}然后找到那个clone and download
Dialogue: 0,0:04:08.83,0:04:12.81,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}然后他会提示你具体的git链接是什么
Dialogue: 0,0:04:12.85,0:04:14.97,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}并不是说是你副本主页的那个网页
Dialogue: 0,0:04:15.41,0:04:18.04,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个基本常识吧我觉得
Dialogue: 0,0:04:18.81,0:04:23.42,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}把这个网址填入到远端的这个URL里面之后呢
Dialogue: 0,0:04:23.67,0:04:28.54,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你在本地这个文件目录也填好之后就点击克隆就可以直接克隆了
Dialogue: 0,0:04:28.79,0:04:29.82,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}接下来就是
Dialogue: 0,0:04:30.33,0:04:31.87,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}提交你刚才进行的改动
Dialogue: 0,0:04:32.38,0:04:36.73,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}提交之前当然你是首先把你之前那些文件改动都做好了
Dialogue: 0,0:04:36.99,0:04:39.03,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}除此之外还有两个坑
Dialogue: 0,0:04:39.29,0:04:40.13,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}需要注意一下
Dialogue: 0,0:04:40.57,0:04:42.11,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}一个是呢
Dialogue: 0,0:04:43.25,0:04:45.95,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}注意关闭换行符自动转换
Dialogue: 0,0:04:46.46,0:04:49.27,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个关闭的方法你可以在这个链接里面找到
Dialogue: 0,0:04:49.79,0:04:52.60,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}有一些语言或者有一些IDE呢
Dialogue: 0,0:04:53.11,0:04:55.93,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}如果你打开了这个换行符自动转换
Dialogue: 0,0:04:56.95,0:05:01.82,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}一旦把Windows的CRLF转换成Unix的LF的话 可能会出问题
Dialogue: 0,0:05:02.59,0:05:04.63,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}那么这种情况下就请一定要关闭
Dialogue: 0,0:05:05.15,0:05:07.45,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}其实就算你不是这种语言
Dialogue: 0,0:05:07.71,0:05:11.29,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}如果有的时候你用CRLF可能是有一些特殊的目的
Dialogue: 0,0:05:11.55,0:05:17.18,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}结果的它git这个东西你转没了以后你再从仓库上克隆下来以后你会发现
Dialogue: 0,0:05:17.43,0:05:19.50,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}CRLF变成了LF
Dialogue: 0,0:05:19.64,0:05:22.74,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这会我觉得是造成一个很大的影响
Dialogue: 0,0:05:22.91,0:05:24.60,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}接下来呢你需要注意
Dialogue: 0,0:05:25.01,0:05:28.95,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个别人的这个仓库啊就是你要pull request的那个仓库
Dialogue: 0,0:05:29.47,0:05:30.75,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}它有没有开提交验证
Dialogue: 0,0:05:32.03,0:05:33.82,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}首先呢你应该看readme
Dialogue: 0,0:05:34.18,0:05:38.72,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}或者contribute这些文档里面有没有说这个pull request是需要签名验证的
Dialogue: 0,0:05:38.94,0:05:40.22,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}还有一种方法是
Dialogue: 0,0:05:40.47,0:05:42.38,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你可以看那个别人的提交历史
Dialogue: 0,0:05:42.44,0:05:44.57,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}如果人家的提交历史里面
Dialogue: 0,0:05:44.83,0:05:49.89,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}都验证过了 你再去发一个没有验证的 我觉得肯定不太好吧
Dialogue: 0,0:05:50.00,0:05:51.74,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个前面我只是说
Dialogue: 0,0:05:51.99,0:05:54.13,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}仓库的拥有者owner(能)看到(的情况)
Dialogue: 0,0:05:54.30,0:05:58.65,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}他可以对分支进行管理 然后对分支加一定的安全的规则
Dialogue: 0,0:05:58.91,0:06:01.24,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}所以的话如果你去提pull request
Dialogue: 0,0:06:01.47,0:06:02.49,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你没有加签名
Dialogue: 0,0:06:03.00,0:06:06.10,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}最后呢哪怕管理员还都给你通过(应该是批准approved)了
Dialogue: 0,0:06:06.24,0:06:08.59,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}它会在这里显示一个 merging is blocked
Dialogue: 0,0:06:08.78,0:06:11.25,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}分支合并的过程阻塞住了
Dialogue: 0,0:06:11.61,0:06:12.75,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}不能继续合并
Dialogue: 0,0:06:12.96,0:06:16.50,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}The base branch requires all commits to be signed
Dialogue: 0,0:06:16.90,0:06:19.46,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}需要所有的提交都被签名
Dialogue: 0,0:06:19.90,0:06:21.95,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}关于这个签名验证如何设置
Dialogue: 0,0:06:22.20,0:06:24.18,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你可以看另外一篇文章
Dialogue: 0,0:06:25.14,0:06:27.07,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这里还需要指出的一点是
Dialogue: 0,0:06:27.58,0:06:32.19,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}就是如果你已经把没有签名提交的pull request放上去以后该怎么办
Dialogue: 0,0:06:32.70,0:06:35.77,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个地方出去跟反悔推送的方法是一样的
Dialogue: 0,0:06:36.03,0:06:38.41,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你只需要在本地做好改动之后
Dialogue: 0,0:06:38.49,0:06:43.04,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}再强制推送上去就可以改变你这个pull request中间的内容
Dialogue: 0,0:06:43.19,0:06:49.23,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}换句话说就是你可以让这个pull request的所有提交重新打上签名
Dialogue: 0,0:06:50.11,0:06:52.41,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}接下来就是推送你刚才的提交
Dialogue: 0,0:06:52.92,0:06:53.95,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这里也有两个坑
Dialogue: 0,0:06:54.71,0:06:56.34,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}首先是sourcetree的问题
Dialogue: 0,0:06:56.76,0:07:00.09,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}如果你在sourcetree里面绑定了多个github账号
Dialogue: 0,0:07:00.35,0:07:01.37,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}提交能成功
Dialogue: 0,0:07:01.63,0:07:03.64,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}却发现推送总是失败的时候
Dialogue: 0,0:07:04.19,0:07:08.03,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}注意在菜单栏-工具-选项-验证-账户里
Dialogue: 0,0:07:08.54,0:07:12.21,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}把当前仓库的账号设置成默认账号即可解决问题
Dialogue: 0,0:07:12.82,0:07:16.99,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}原因是sourcetree对多个github账号的oauth验证管理有缺陷
Dialogue: 0,0:07:17.50,0:07:22.37,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}似乎不能针对单个仓库进行oauth的账号密码管理
Dialogue: 0,0:07:23.39,0:07:26.20,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}或者你也可以自行配置ssh
Dialogue: 0,0:07:26.71,0:07:29.14,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}而不使用sourcetree(提供)的(github) oauth验证
Dialogue: 0,0:07:29.53,0:07:34.07,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}不过话说回来了 sourcetree便利就是便利在是个oauth验证上面
Dialogue: 0,0:07:34.53,0:07:39.95,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}如果你不用oauth验证了的话 其实就和命令行git的配置使用差不多了
Dialogue: 0,0:07:40.54,0:07:45.54,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}当然这里指的是命令行git的github账号密码的配置
Dialogue: 0,0:07:46.33,0:07:50.16,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这样的话就感觉sourcetree真的有个GUI用(尬双关预警)
Dialogue: 0,0:07:51.55,0:07:54.62,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}其次如果有人有整洁强迫症的话
Dialogue: 0,0:07:54.87,0:07:58.20,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}可以考虑在推送时推送到一个单独的分支上
Dialogue: 0,0:07:58.46,0:08:00.76,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}而不是推送到副本(原先的)分支上
Dialogue: 0,0:08:01.53,0:08:06.25,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}譬如你可以单独创建一个叫patch-xxx的这样的分支
Dialogue: 0,0:08:06.32,0:08:11.51,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}类似的命名格式或者说命名方法呢可以去谷歌了
Dialogue: 0,0:08:12.03,0:08:15.61,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}反正合并的时候你要清楚不管你命名成什么名字
Dialogue: 0,0:08:16.12,0:08:20.01,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你要选择的那个分支是你要合并的那个分支就行了
Dialogue: 0,0:08:20.47,0:08:22.52,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}命名规范主要就是好看一点
Dialogue: 0,0:08:22.78,0:08:24.24,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}记录起来方便一些
Dialogue: 0,0:08:24.83,0:08:27.49,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}接下来讲一下这个反悔推送的方法
Dialogue: 0,0:08:28.26,0:08:32.62,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}在sourcetree里面 注意这里是 改动都是在本地做的
Dialogue: 0,0:08:33.02,0:08:35.83,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}点击你要重置回去的那一次提交
Dialogue: 0,0:08:36.09,0:08:39.16,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}右键重置当前分支到此次提交
Dialogue: 0,0:08:39.42,0:08:40.95,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}然后在弹出的窗口中
Dialogue: 0,0:08:41.21,0:08:43.92,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}选择软合并保留所有本地改动
Dialogue: 0,0:08:44.79,0:08:46.84,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}确定你做的修改没问题之后
Dialogue: 0,0:08:47.87,0:08:50.68,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}再正常地在本地提交一次
Dialogue: 0,0:08:51.71,0:08:52.73,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}提交完了之后
Dialogue: 0,0:08:52.99,0:08:55.48,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}确定本地仓库没有问题的时候
Dialogue: 0,0:08:55.80,0:08:57.92,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这里一定要多次确认
Dialogue: 0,0:08:58.62,0:09:01.43,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}右上角点击命令行模式
Dialogue: 0,0:09:01.95,0:09:03.22,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}打开git bash
Dialogue: 0,0:09:03.99,0:09:05.58,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}输入以下指令即可
Dialogue: 0,0:09:06.04,0:09:07.07,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}这个指令就是
Dialogue: 0,0:09:07.32,0:09:08.72,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}git push -f
Dialogue: 0,0:09:09.63,0:09:12.13,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}表示强制推送到远端
Dialogue: 0,0:09:12.95,0:09:15.51,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}注意这个指令的副作用非常大
Dialogue: 0,0:09:16.03,0:09:18.16,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}尽量只在自己的仓库上
Dialogue: 0,0:09:18.18,0:09:20.51,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}或者说是你fork别人的这种
Dialogue: 0,0:09:20.63,0:09:25.50,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}你强制推送之后没有太多副作用的情况下进行操作
Dialogue: 0,0:09:25.50,0:09:29.01,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}如果不是这样的话可能会造成一些不可挽回的后果
Dialogue: 0,0:09:29.59,0:09:32.41,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}以上就是本期演示的全部内容
Dialogue: 0,0:09:32.92,0:09:34.20,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}感谢大家观看
Dialogue: 0,0:09:34.46,0:09:35.23,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}我是布尔
Dialogue: 0,0:09:35.99,0:09:38.04,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}也许还有下一期视频吧
Dialogue: 0,0:09:38.63,0:09:40.06,1080P文泉驿微米黑标准,,0,0,0,,{\blur4}我们到时候再见 拜拜
